@import '~styles/variables';

/**
 * Dots module for styling the decorative dots along the left and right edge of
 * the screen.
 *
 * Dots do not appear on small screens and begin to increase in size on large
 * screens.
 */

// empirically determined screen sizes for dot visibility and increasing width
$dots-screen-appear: 800px;
$dots-screen-lg: 1000px;
$dots-screen-xl: 1300px;
$dots-lg-size-increase: 6vw;
$dots-xl-size-increase: 6vw;

// "halo" that controls where the dot begins running away from the mouse on
// large screens
$dot-halo-width: 6rem;

.dots {
  height: 100vh;
}

.dot {
  position: absolute;
  visibility: hidden;
  top: 0;
  z-index: 3;
  border-radius: 50%;
  opacity: 0;
  filter: blur(4px);
  backdrop-filter: blur(1px);
  transition: opacity 400ms,
              width 400ms,
              height 400ms,
              left 400ms,
              right 400ms;

  &:after {
    content: "";
    position: absolute;
    width: calc(100% + #{$dot-halo-width});
    height: calc(100% + #{$dot-halo-width});
    top: -#{$dot-halo-width/2};
    left: -#{$dot-halo-width/2};
    border-radius: 50%;
    background: transparent;
  }
}

@each $i, $value in $dot-colors {
  .dot-color-#{$i} {
    background: rgba($value, 0.3);
  }
}

// Generate left and right dot positions for 6 possible values of dot width
// Dots range from 6rem to 12rem
@for $i from 8 through 14 {
  .dot-width-#{$i - 7} {
    width: #{$i}rem;
    height: #{$i}rem;

    &.dot-left {
      left: calc(17.5% - #{$i/2}rem);
    }

    &.dot-right {
      right: calc(17.5% - #{$i/2}rem);
    }

    // on large screens (>1000px) start to grow dots as a function of vw
    @media (min-width: $dots-screen-lg) {
      width: calc(#{$i}rem + #{$dots-lg-size-increase});
      height: calc(#{$i}rem + #{$dots-lg-size-increase});

      &.dot-left {
        left: calc(17.5% - #{$i/2}rem - #{$dots-lg-size-increase/2});
      }

      &.dot-right {
        right: calc(17.5% - #{$i/2}rem - #{$dots-lg-size-increase/2});
      }
    }

    @media (min-width: $dots-screen-xl) {
      width: calc(#{$i}rem + #{$dots-xl-size-increase});
      height: calc(#{$i}rem + #{$dots-xl-size-increase});

      &.dot-left {
        left: calc(17.5% - #{$i/2}rem - #{$dots-xl-size-increase/2});
      }

      &.dot-right {
        right: calc(17.5% - #{$i/2}rem - #{$dots-xl-size-increase/2});
      }
    }
  }
}

/**
 *  Generate transform for 5 possible dot position x axis variations to slightly
 *  vary the position of each dot.
 */
@for $i from -2 through 2 {
  .dot-position-#{i + 2} {
    transform: translateX(#{$i}rem);
  }
}

@media (min-width: $dots-screen-appear) {
  .dot-enter-active,
  .dot-enter-done,
  .dot-exit {
    visibility: visible;
    opacity: 1;
  }

  .dot-exit-active,
  .dot-exit-done {
    visibility: visible;
    opacity: 0;
  }
}
